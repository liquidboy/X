<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:localc="using:X.UI.RichTab.Converters"
    xmlns:local="using:X.UI.RichTab">
    <localc:InverseBooleanConverter x:Key="InverseBooleanConverter" ></localc:InverseBooleanConverter>
    <localc:BooleanToVisibilityConverter x:Key="FalseToVisibleConverter" IsReversed="True" />
    <localc:TabsMarginLeftConverter x:Key="TabsMarginLeftConverter" ></localc:TabsMarginLeftConverter>
    <Style x:Key="TabButtonStyle" TargetType="Button">
        <Setter
			Property="Background"
			Value="{ThemeResource ButtonBackgroundThemeBrush}" />
        <Setter
			Property="Foreground"
			Value="{ThemeResource ButtonForegroundThemeBrush}" />
        <Setter
			Property="BorderBrush"
			Value="{ThemeResource ButtonBorderThemeBrush}" />
        <Setter
			Property="BorderThickness"
			Value="{ThemeResource ButtonBorderThemeThickness}" />
        <Setter
			Property="Padding"
			Value="12,4,12,4" />
        <Setter
			Property="HorizontalAlignment"
			Value="Left" />
        <Setter
			Property="VerticalAlignment"
			Value="Center" />
        <Setter
			Property="FontFamily"
			Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter
			Property="FontWeight"
			Value="SemiBold" />
        <Setter
			Property="FontSize"
			Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter
			Property="Template">
            <Setter.Value>
                <ControlTemplate
					TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
								x:Name="CommonStates">
                                <VisualState
									x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.Background)"
											Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame
												KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush
														Color="Transparent" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
											Storyboard.TargetProperty="(ContentPresenter.Foreground)"
											Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame
												KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush
														Color="#4CFFFFFF" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState
									x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
											Storyboard.TargetProperty="Foreground"
											Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{ThemeResource ButtonPointerOverForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.Background)"
											Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame
												KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush
														Color="#F2D3D3D3" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState
									x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
											Storyboard.TargetProperty="Foreground"
											Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame
												KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush
														Color="#F2D3D3D3" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.Background)"
											Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame
												KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush
														Color="Transparent" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState
									x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
											Storyboard.TargetProperty="BorderBrush"
											Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{x:Null}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
											Storyboard.TargetProperty="Foreground"
											Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame
												KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush
														Color="White" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Border.Background)"
											Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame
												KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush
														Color="Black" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup
								x:Name="FocusStates">
                                <VisualState
									x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
											Duration="0"
											To="1"
											Storyboard.TargetProperty="Opacity"
											Storyboard.TargetName="FocusVisualWhite" />
                                        <DoubleAnimation
											Duration="0"
											To="1"
											Storyboard.TargetProperty="Opacity"
											Storyboard.TargetName="FocusVisualBlack" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState
									x:Name="Unfocused" />
                                <VisualState
									x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
							x:Name="Border"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Margin="0">
                            <ContentPresenter
								x:Name="ContentPresenter"
								AutomationProperties.AccessibilityView="Raw"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								ContentTransitions="{TemplateBinding ContentTransitions}"
								Content="{TemplateBinding Content}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <Rectangle
							x:Name="FocusVisualWhite"
							IsHitTestVisible="False"
							Opacity="0"
							StrokeDashOffset="1.5"
							StrokeEndLineCap="Square"
							Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}"
							StrokeDashArray="1,1" />
                        <Rectangle
							x:Name="FocusVisualBlack"
							IsHitTestVisible="False"
							Opacity="0"
							StrokeDashOffset="0.5"
							StrokeEndLineCap="Square"
							Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}"
							StrokeDashArray="1,1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:TabList" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TabList">

                    <ScrollViewer x:Name="svTabs" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
                        <Grid>
                            <StackPanel x:Name="grdLockedTabs" Margin="0,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Orientation="Horizontal">
                                <ItemsControl x:Name="icLockedTabs" VerticalAlignment="Stretch" ItemsSource="{Binding LockedTabs}">
                                    <ItemsControl.Resources>
                                        <DataTemplate x:Key="dtTile">
                                            <local:TabButton HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ></local:TabButton>
                                        </DataTemplate>
                                    </ItemsControl.Resources>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"></StackPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <StaticResource ResourceKey="dtTile" />
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                            <StackPanel x:Name="grdTabs" Margin="{Binding LockedTabs.Count, Converter={StaticResource TabsMarginLeftConverter}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Orientation="Horizontal">
                                <ItemsControl x:Name="icTabs" VerticalAlignment="Stretch" ItemsSource="{Binding Tabs}">
                                    <ItemsControl.Resources>
                                        <DataTemplate x:Key="dtTile">
                                            <local:TabButton HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ></local:TabButton>
                                        </DataTemplate>
                                    </ItemsControl.Resources>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"></StackPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <StaticResource ResourceKey="dtTile" />
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </Grid>
                    </ScrollViewer>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:TabButton" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TabButton">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Button x:Name="butTab" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="0" Padding="10,0,5,0"   CommandParameter="{Binding }" ClickMode="Release" Canvas.ZIndex="10" UseLayoutRounding="False" Command="{Binding TabChangedCommand}" Style="{StaticResource TabButtonStyle}" IsEnabled="{Binding HasFocus, Converter={StaticResource InverseBooleanConverter}}"></Button>
                        <!--PointerExited="Button_PointerExited" Command="{Binding TabChangedCommand}" PointerEntered="Button_PointerEntered" -->
                        <StackPanel IsHitTestVisible="False" HorizontalAlignment="Stretch" VerticalAlignment="Center" Orientation="Horizontal" Padding="10,5,10,5" BorderBrush="{Binding RightBorderColor}" BorderThickness="0,0,1,0" Canvas.ZIndex="11">
                            <Image Height="20" Width="20" IsHitTestVisible="False"  Source="{Binding FaviconUri}" Stretch="Uniform"  />
                            <!-- Visibility="{Binding HasFocus, Converter={StaticResource FalseToVisibleConverter}}" -->
                            <TextBlock TextWrapping="Wrap" Text="{Binding DisplayTitle}" IsHitTestVisible="False"  FontSize="12" FontFamily="Segoe UI" Foreground="{Binding Foreground}" Margin="5,2,5,0" Visibility="{Binding IsPinned, Converter={StaticResource FalseToVisibleConverter}}" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
